/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SigninIndexImport } from './routes/signin/index'
import { Route as ProfileProfileIdImport } from './routes/profile/$profileId'

// Create Virtual Routes

const MyStoriesLazyImport = createFileRoute('/myStories')()

// Create/Update Routes

const MyStoriesLazyRoute = MyStoriesLazyImport.update({
  id: '/myStories',
  path: '/myStories',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/myStories.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SigninIndexRoute = SigninIndexImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileProfileIdRoute = ProfileProfileIdImport.update({
  id: '/profile/$profileId',
  path: '/profile/$profileId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/myStories': {
      id: '/myStories'
      path: '/myStories'
      fullPath: '/myStories'
      preLoaderRoute: typeof MyStoriesLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/$profileId': {
      id: '/profile/$profileId'
      path: '/profile/$profileId'
      fullPath: '/profile/$profileId'
      preLoaderRoute: typeof ProfileProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/signin/': {
      id: '/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/myStories': typeof MyStoriesLazyRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/signin': typeof SigninIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/myStories': typeof MyStoriesLazyRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/signin': typeof SigninIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/myStories': typeof MyStoriesLazyRoute
  '/profile/$profileId': typeof ProfileProfileIdRoute
  '/signin/': typeof SigninIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/myStories' | '/profile/$profileId' | '/signin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/myStories' | '/profile/$profileId' | '/signin'
  id: '__root__' | '/' | '/myStories' | '/profile/$profileId' | '/signin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MyStoriesLazyRoute: typeof MyStoriesLazyRoute
  ProfileProfileIdRoute: typeof ProfileProfileIdRoute
  SigninIndexRoute: typeof SigninIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MyStoriesLazyRoute: MyStoriesLazyRoute,
  ProfileProfileIdRoute: ProfileProfileIdRoute,
  SigninIndexRoute: SigninIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/myStories",
        "/profile/$profileId",
        "/signin/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/myStories": {
      "filePath": "myStories.lazy.tsx"
    },
    "/profile/$profileId": {
      "filePath": "profile/$profileId.tsx"
    },
    "/signin/": {
      "filePath": "signin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
